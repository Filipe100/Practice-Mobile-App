{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Styles from \"../styles/MainStyle\";\nimport Settings from \"../constants/Settings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction changeFontSize(styles) {\n  var styleObject = StyleSheet.flatten(styles);\n  var newFontSize = {};\n  var newLineHeight = {};\n  if (styleObject.fontSize) {\n    newFontSize = {\n      fontSize: styleObject.fontSize * Settings.fontSizeModifier\n    };\n    if (styleObject.lineHeight) {\n      newLineHeight = {\n        lineHeight: styleObject.lineHeight * Settings.fontSizeModifier\n      };\n    }\n  }\n  return [styleObject, newFontSize, newLineHeight];\n}\nexport function MonoText(props) {\n  return _jsx(Text, _objectSpread(_objectSpread({}, props), {}, {\n    style: [props.style, {\n      fontFamily: 'space-mono'\n    }]\n  }));\n}\nexport function TextParagraph(props) {\n  return _jsx(Text, _objectSpread(_objectSpread({}, props), {}, {\n    style: [changeFontSize(Styles.bodyText), props.style]\n  }));\n}\nexport function TextListItem(props) {\n  return _jsxs(TextParagraph, _objectSpread(_objectSpread({}, props), {}, {\n    style: [changeFontSize(Styles.listItem), props.style],\n    children: [_jsx(Ionicons, {\n      name: \"md-square\",\n      size: 10,\n      style: Styles.listItemBullet\n    }), props.children]\n  }));\n}\nexport function TextH1(props) {\n  return _jsx(Text, _objectSpread(_objectSpread({}, props), {}, {\n    style: [changeFontSize(Styles.h1), props.style]\n  }));\n}\nexport function TextH2(props) {\n  return _jsx(Text, _objectSpread(_objectSpread({}, props), {}, {\n    style: [changeFontSize(Styles.h2), props.style]\n  }));\n}\nexport function TextH3(props) {\n  return _jsx(Text, _objectSpread(_objectSpread({}, props), {}, {\n    style: [changeFontSize(Styles.h3), props.style]\n  }));\n}\nexport function TextLabel(props) {\n  return _jsx(TextParagraph, _objectSpread(_objectSpread({}, props), {}, {\n    style: [changeFontSize(Styles.label), props.style]\n  }));\n}","map":{"version":3,"names":["React","Text","View","StyleSheet","Ionicons","Styles","Settings","jsx","_jsx","jsxs","_jsxs","changeFontSize","styles","styleObject","flatten","newFontSize","newLineHeight","fontSize","fontSizeModifier","lineHeight","MonoText","props","_objectSpread","style","fontFamily","TextParagraph","bodyText","TextListItem","listItem","children","name","size","listItemBullet","TextH1","h1","TextH2","h2","TextH3","h3","TextLabel","label"],"sources":["C:/project/Practice-Mobile-Apps/components/StyledText.js"],"sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport Styles from \"../styles/MainStyle\";\nimport Settings from \"../constants/Settings\";\n\n// Change fontSize & lineHeight based on the global fontSizeModifier\nfunction changeFontSize(styles) {\n  \n  // Get provided styles\n  let styleObject = StyleSheet.flatten(styles);\n  let newFontSize = {};\n  let newLineHeight = {};\n\n  // Update font size\n  if (styleObject.fontSize) {\n    newFontSize = {fontSize: styleObject.fontSize * Settings.fontSizeModifier};\n\n    // Update line height\n    if (styleObject.lineHeight) {\n      newLineHeight = {lineHeight: styleObject.lineHeight * Settings.fontSizeModifier};\n    }\n  }\n\n  // Return modified style\n  return [styleObject, newFontSize, newLineHeight];\n}\n\nexport function MonoText(props) {\n  return <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />;\n}\n\nexport function TextParagraph(props) {\n  return <Text {...props} style={[changeFontSize(Styles.bodyText), props.style]} />;\n}\n\nexport function TextListItem(props) {\n  return (<TextParagraph {...props} style={[changeFontSize(Styles.listItem), props.style]}>\n    <Ionicons\n      name=\"md-square\"\n      size={10}\n      style={Styles.listItemBullet}\n    />\n    {props.children}\n  </TextParagraph>);\n}\n\nexport function TextH1(props) {\n  return <Text {...props} style={[changeFontSize(Styles.h1), props.style]} />;\n}\n\nexport function TextH2(props) {\n  return <Text {...props} style={[changeFontSize(Styles.h2), props.style]} />;\n}\n\nexport function TextH3(props) {\n  return <Text {...props} style={[changeFontSize(Styles.h3), props.style]} />;\n}\n\nexport function TextLabel(props) {\n  return <TextParagraph {...props} style={[changeFontSize(Styles.label), props.style]} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}