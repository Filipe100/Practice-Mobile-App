{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport moment from 'moment';\nvar CacheItem = _createClass(function CacheItem(value) {\n  _classCallCheck(this, CacheItem);\n  this.value = value;\n  this.timeStamp = Date.now();\n});\n;\nvar AsyncCache = function () {\n  function AsyncCache() {\n    _classCallCheck(this, AsyncCache);\n    this.cachePrefix = 'cache-';\n    this.ttlMinutes = 5;\n  }\n  _createClass(AsyncCache, [{\n    key: \"isExpired\",\n    value: function isExpired(item) {\n      var now = moment(Date.now());\n      var storedTime = moment(item.timeStamp);\n      return now.diff(storedTime, 'minutes') > this.ttlMinutes;\n    }\n  }, {\n    key: \"setItem\",\n    value: function () {\n      var _setItem = _asyncToGenerator(function* (key, value) {\n        var item = new CacheItem(value);\n        try {\n          yield AsyncStorage.setItem(this.cachePrefix + key, JSON.stringify(item));\n        } catch (err) {\n          console.error(err);\n        }\n      });\n      function setItem(_x, _x2) {\n        return _setItem.apply(this, arguments);\n      }\n      return setItem;\n    }()\n  }, {\n    key: \"getItem\",\n    value: function () {\n      var _getItem = _asyncToGenerator(function* (key) {\n        try {\n          var value = yield AsyncStorage.getItem(this.cachePrefix + key);\n          var item = JSON.parse(value);\n          if (!item) return null;\n          if (this.isExpired(item)) {\n            yield AsyncStorage.removeItem(this.cachePrefix + key);\n            return null;\n          }\n          return item.value;\n        } catch (err) {\n          console.error(err);\n        }\n      });\n      function getItem(_x3) {\n        return _getItem.apply(this, arguments);\n      }\n      return getItem;\n    }()\n  }, {\n    key: \"removeItem\",\n    value: function () {\n      var _removeItem = _asyncToGenerator(function* (key) {\n        try {\n          yield AsyncStorage.removeItem(this.cachePrefix + key);\n        } catch (err) {\n          console.error(err);\n        }\n      });\n      function removeItem(_x4) {\n        return _removeItem.apply(this, arguments);\n      }\n      return removeItem;\n    }()\n  }, {\n    key: \"removeAllItems\",\n    value: function () {\n      var _removeAllItems = _asyncToGenerator(function* () {\n        var _this = this;\n        try {\n          var allKeys = yield AsyncStorage.getAllKeys();\n          var cacheKeys = allKeys.filter(function (k) {\n            return k.startsWith(_this.cachePrefix);\n          });\n          if (cacheKeys) {\n            yield AsyncStorage.multiRemove(cacheKeys);\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      });\n      function removeAllItems() {\n        return _removeAllItems.apply(this, arguments);\n      }\n      return removeAllItems;\n    }()\n  }]);\n  return AsyncCache;\n}();\nexport default new AsyncCache();","map":{"version":3,"names":["AsyncStorage","moment","CacheItem","_createClass","value","_classCallCheck","timeStamp","Date","now","AsyncCache","cachePrefix","ttlMinutes","key","isExpired","item","storedTime","diff","_setItem","_asyncToGenerator","setItem","JSON","stringify","err","console","error","_x","_x2","apply","arguments","_getItem","getItem","parse","removeItem","_x3","_removeItem","_x4","_removeAllItems","_this","allKeys","getAllKeys","cacheKeys","filter","k","startsWith","multiRemove","removeAllItems"],"sources":["C:/project/Practice-Mobile-Apps/utils/Caching.js"],"sourcesContent":["/** \r\n * The Caching module provides\r\n */\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport moment from 'moment';\r\n\r\n\r\n/**\r\n * @class\r\n * An item to add to the cache with a value and timestamp (for determining cache invalidation).\r\n */\r\nclass CacheItem {\r\n    /**\r\n     * \r\n     * @param {object} value The value to store in the cache.\r\n     */\r\n    constructor(value) {\r\n        /** @public The value to store in the cache. */\r\n        this.value = value;\r\n\r\n        /** @public JS timestamp when the item was created. */\r\n        this.timeStamp = Date.now();\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * @class\r\n * Handles local caching of data using AsyncStorage.\r\n */\r\nclass AsyncCache\r\n{\r\n\r\n    /** The prefix string to add to all cached items in AsyncStorage. */\r\n    cachePrefix = 'cache-';\r\n    \r\n    /** The TTL (time to live) value in minutes for all cached items. */\r\n    ttlMinutes = 5;\r\n\r\n\r\n    /**\r\n     * @private\r\n     * Check if a cache item has expired (longer than TTL) and needs to be refreshed.\r\n     * @param {CacheItem} item Cache item to check expiry for.\r\n     * @returns {bool} True if item has expired (not updated for longer than TTL).\r\n     */\r\n    isExpired(item) {\r\n        const now = moment(Date.now());\r\n        const storedTime = moment(item.timeStamp);\r\n        return now.diff(storedTime, 'minutes') > this.ttlMinutes;\r\n    }\r\n\r\n\r\n    /**\r\n     * Store an item in the cache.\r\n     * @param {string} key Key to reference cached item.\r\n     * @param {object} value The value to cache.\r\n     */\r\n    async setItem(key, value) {\r\n        const item = new CacheItem(value);\r\n        \r\n        try {\r\n            // Set item in async storage\r\n            await AsyncStorage.setItem(this.cachePrefix + key, JSON.stringify(item));\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Retrieve an item from the cache.\r\n     * @param {string} key Key to reference cached item.\r\n     */\r\n    async getItem(key) {\r\n\r\n        try {\r\n            // Get item from async storage\r\n            const value = await AsyncStorage.getItem(this.cachePrefix + key);\r\n            const item = JSON.parse(value);\r\n\r\n            // No item found, return null\r\n            if (!item) return null;\r\n            \r\n            // Item expired, return null\r\n            if (this.isExpired(item)) {\r\n                await AsyncStorage.removeItem(this.cachePrefix + key);\r\n                return null;\r\n            }\r\n\r\n            // Return item value\r\n            return item.value;\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Remove an item from the cache.\r\n     * @param {string} key Key to reference cached item.\r\n     */\r\n    async removeItem(key) {\r\n        try {\r\n            \r\n            // Remove item\r\n            await AsyncStorage.removeItem(this.cachePrefix + key);\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Removes all items from the cache.\r\n     */\r\n    async removeAllItems() {\r\n        try {\r\n\r\n            // Get all items from async storage\r\n            const allKeys = await AsyncStorage.getAllKeys();\r\n\r\n            // Filter to only include cache items\r\n            const cacheKeys = allKeys.filter(k => k.startsWith(this.cachePrefix))\r\n            \r\n            // Remove all cache items\r\n            if (cacheKeys) {\r\n                await AsyncStorage.multiRemove(cacheKeys);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n}\r\n\r\nexport default new AsyncCache();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}