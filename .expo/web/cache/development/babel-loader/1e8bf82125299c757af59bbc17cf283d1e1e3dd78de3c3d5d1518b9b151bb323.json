{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { imageIndex } from \"../constants/images\";\nimport ViewPeopleScreen from \"../screens/ViewPeopleScreen\";\nimport Styles from \"../styles/MainStyle\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Settings from \"../constants/Settings\";\nimport { MyButton } from \"../components/MyButton\";\nimport { TextH1, TextParagraph } from \"../components/StyledText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar _React$useState = React.useState(true),\n  _React$useState2 = _slicedToArray(_React$useState, 2),\n  isLogoColor = _React$useState2[0],\n  setIslogoColor = _React$useState2[1];\nfunction toggleLogo() {\n  setIslogoColor(!isLogoColor);\n}\nexport default function PeopleNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"ViewPeople\",\n    screenOptions: {\n      headerShown: true,\n      headerBackTitle: \"Back\",\n      headerStyle: Styles.headerBar,\n      headerTitleStyle: Styles.headerBarTitle\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"ViewPeople\",\n      component: ViewPeopleScreen,\n      options: {\n        title: 'View All Staff'\n      }\n    }), _jsx(Pressable, {\n      onPress: toggleLogo,\n      children: _jsx(Image, {\n        source: imageIndex[isLogoColor ? 'logo' : 'mono'],\n        style: Styles.homeLogo\n      })\n    })]\n  });\n}","map":{"version":3,"names":["createNativeStackNavigator","React","imageIndex","ViewPeopleScreen","Styles","Image","Text","View","ScrollView","Pressable","SafeAreaView","Settings","MyButton","TextH1","TextParagraph","jsx","_jsx","jsxs","_jsxs","Stack","_React$useState","useState","_React$useState2","_slicedToArray","isLogoColor","setIslogoColor","toggleLogo","PeopleNavigator","Navigator","initialRouteName","screenOptions","headerShown","headerBackTitle","headerStyle","headerBar","headerTitleStyle","headerBarTitle","children","Screen","name","component","options","title","onPress","source","style","homeLogo"],"sources":["C:/Users/Filipe/Desktop/React Native App/Mobile App/Practice-Mobile-App/navigation/PeopleNavigator.js"],"sourcesContent":["//import { createStackNavigator } from '@react-navigation/stack';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\nimport { imageIndex } from '../constants/images';\r\n// Import navigation and screens\r\nimport ViewPeopleScreen from '../screens/ViewPeopleScreen';\r\n\r\n// Import styling and components\r\nimport Styles from \"../styles/MainStyle\";\r\n\r\nimport { Image, Text, View, ScrollView, Pressable } from 'react-native';\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n\r\n\r\n// Import helper code\r\nimport Settings from '../constants/Settings';\r\n\r\n// Import styling and components\r\n\r\nimport { MyButton } from '../components/MyButton';\r\nimport { TextH1, TextParagraph } from \"../components/StyledText\";\r\n//const Stack = createStackNavigator();\r\nconst Stack = createNativeStackNavigator();\r\nconst [isLogoColor, setIslogoColor] = React.useState(true);\r\n\r\nfunction toggleLogo() {\r\n    setIslogoColor(!isLogoColor);\r\n    //console.log('345345');\r\n  }\r\nexport default function PeopleNavigator() {\r\n  return (\r\n    <Stack.Navigator \r\n      initialRouteName=\"ViewPeople\"\r\n      screenOptions={{\r\n        headerShown: true,\r\n        headerBackTitle: \"Back\",\r\n        headerStyle: Styles.headerBar,\r\n        headerTitleStyle: Styles.headerBarTitle,\r\n      }}>\r\n      <Stack.Screen\r\n        name=\"ViewPeople\"\r\n        component={ViewPeopleScreen}\r\n        options={{ title: 'View All Staff' }} />\r\n        \r\n        <Pressable onPress={toggleLogo}>\r\n          <Image source={imageIndex[isLogoColor ? 'logo' : 'mono']} style={Styles.homeLogo}/>\r\n        </Pressable>\r\n    </Stack.Navigator>\r\n  );\r\n}"],"mappings":";AACA,SAASA,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU;AAEnB,OAAOC,gBAAgB;AAGvB,OAAOC,MAAM;AAA4B,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAGzC,SAASC,YAAY,QAAQ,gCAAgC;AAI7D,OAAOC,QAAQ;AAIf,SAASC,QAAQ;AACjB,SAASC,MAAM,EAAEC,aAAa;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjE,IAAMC,KAAK,GAAGnB,0BAA0B,CAAC,CAAC;AAC1C,IAAAoB,eAAA,GAAsCnB,KAAK,CAACoB,QAAQ,CAAC,IAAI,CAAC;EAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;EAAnDI,WAAW,GAAAF,gBAAA;EAAEG,cAAc,GAAAH,gBAAA;AAElC,SAASI,UAAUA,CAAA,EAAG;EAClBD,cAAc,CAAC,CAACD,WAAW,CAAC;AAE9B;AACF,eAAe,SAASG,eAAeA,CAAA,EAAG;EACxC,OACET,KAAA,CAACC,KAAK,CAACS,SAAS;IACdC,gBAAgB,EAAC,YAAY;IAC7BC,aAAa,EAAE;MACbC,WAAW,EAAE,IAAI;MACjBC,eAAe,EAAE,MAAM;MACvBC,WAAW,EAAE7B,MAAM,CAAC8B,SAAS;MAC7BC,gBAAgB,EAAE/B,MAAM,CAACgC;IAC3B,CAAE;IAAAC,QAAA,GACFrB,IAAA,CAACG,KAAK,CAACmB,MAAM;MACXC,IAAI,EAAC,YAAY;MACjBC,SAAS,EAAErC,gBAAiB;MAC5BsC,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAiB;IAAE,CAAE,CAAC,EAExC1B,IAAA,CAACP,SAAS;MAACkC,OAAO,EAAEjB,UAAW;MAAAW,QAAA,EAC7BrB,IAAA,CAACX,KAAK;QAACuC,MAAM,EAAE1C,UAAU,CAACsB,WAAW,GAAG,MAAM,GAAG,MAAM,CAAE;QAACqB,KAAK,EAAEzC,MAAM,CAAC0C;MAAS,CAAC;IAAC,CAC1E,CAAC;EAAA,CACC,CAAC;AAEtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}