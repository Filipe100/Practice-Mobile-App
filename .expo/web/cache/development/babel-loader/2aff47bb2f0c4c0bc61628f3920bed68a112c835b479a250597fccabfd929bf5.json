{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Settings from \"../constants/Settings\";\nimport { TextParagraph, TextH1, TextH2, TextH3, TextListItem } from \"../components/StyledText\";\nimport Styles from \"../styles/MainStyle\";\nimport Colours from \"../constants/Colours\";\nimport { MyButton } from \"../components/MyButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HelpScreen(props) {\n  var _React$useState = React.useState(Settings.fontSizeModifier),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    fontSizeModifier = _React$useState2[0],\n    setFontSizeModifier = _React$useState2[1];\n  function changeFontSize(fontSizeModifier) {\n    Settings.fontSizeModifier += fontSizeModifier;\n    setFontSizeModifier(Settings.fontSizeModifier);\n  }\n  return _jsx(SafeAreaView, {\n    style: Styles.safeAreaView,\n    children: _jsxs(ScrollView, {\n      style: Styles.container,\n      contentContainerStyle: Styles.contentContainer,\n      children: [_jsxs(View, {\n        style: Styles.helpButtonContainer,\n        children: [_jsx(MyButton, {\n          text: \"- smaller\",\n          type: \"default\",\n          size: \"Medium\",\n          onPress: function onPress() {\n            changeFontSize(-0.1);\n          },\n          buttonStyle: Styles.helpButton\n        }), _jsx(MyButton, {\n          text: \"+ Bigger\",\n          type: \"default\",\n          size: \"Medium\",\n          onPress: function onPress() {\n            changeFontSize(+0.1);\n          },\n          buttonStyle: Styles.helpButton\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(TextH1, {\n          style: {\n            marginTop: 0,\n            marginLeft: 8\n          },\n          children: \"Help topics\"\n        }), _jsx(TextH3, {\n          children: \"Account Management\"\n        }), _jsx(TextH2, {\n          children: \"Sample content\"\n        }), _jsx(TextParagraph, {\n          children: \"Here is some sample content for a help topic (or just any set of static text for the screen).\"\n        }), _jsx(TextH2, {\n          children: \"Custom components\"\n        }), _jsx(TextParagraph, {\n          children: \"You can add all of your own content and structure for these screens, making use of the customised text components from components/StyledText.\"\n        }), _jsx(TextH3, {\n          children: \"Custom text components:\"\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","View","ScrollView","Pressable","Text","SafeAreaView","Settings","TextParagraph","TextH1","TextH2","TextH3","TextListItem","Styles","Colours","MyButton","jsx","_jsx","jsxs","_jsxs","HelpScreen","props","_React$useState","useState","fontSizeModifier","_React$useState2","_slicedToArray","setFontSizeModifier","changeFontSize","style","safeAreaView","children","container","contentContainerStyle","contentContainer","helpButtonContainer","text","type","size","onPress","buttonStyle","helpButton","marginTop","marginLeft"],"sources":["C:/Users/Filipe/Desktop/React Native App/Mobile App/Practice-Mobile-App/screens/HelpScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { View, ScrollView, Pressable, Text } from 'react-native';\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n\r\n// Import helper code\r\nimport Settings from '../constants/Settings';\r\n\r\n// Import styling and components\r\nimport { TextParagraph, TextH1, TextH2, TextH3, TextListItem } from \"../components/StyledText\";\r\nimport Styles from \"../styles/MainStyle\";\r\nimport Colours from '../constants/Colours';\r\nimport { MyButton } from '../components/MyButton';\r\n\r\n\r\n\r\n\r\nexport default function HelpScreen(props) {\r\n\r\n\r\n  const [fontSizeModifier, setFontSizeModifier]=React.useState(Settings.fontSizeModifier);\r\n\r\n  function changeFontSize(fontSizeModifier) {\r\n    Settings.fontSizeModifier += fontSizeModifier;\r\n    setFontSizeModifier(Settings.fontSizeModifier);\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={Styles.safeAreaView}>\r\n      <ScrollView style={Styles.container} contentContainerStyle={Styles.contentContainer}>\r\n\r\n        <View style={Styles.helpButtonContainer}>\r\n          <MyButton\r\n            text=\"- smaller\"\r\n            type=\"default\"\r\n            size=\"Medium\"\r\n            onPress={()=>{changeFontSize(-0.1)}}\r\n            buttonStyle={Styles.helpButton}\r\n          />\r\n\r\n          <MyButton\r\n            text=\"+ Bigger\"\r\n            type=\"default\"\r\n            size=\"Medium\"\r\n            onPress={()=>{changeFontSize(+0.1)}}\r\n            buttonStyle={Styles.helpButton}\r\n          />\r\n        </View>\r\n\r\n        <View>        \r\n           \r\n        <TextH1 style={{ marginTop: 0, marginLeft: 8, }}>Help topics</TextH1>\r\n\r\n          \r\n\r\n\r\n          <TextH3>Account Management</TextH3>\r\n\r\n\r\n          \r\n          <TextH2>Sample content</TextH2>\r\n\r\n          <TextParagraph>Here is some sample content for a help topic (or just any set of static text for the screen).</TextParagraph>\r\n\r\n          <TextH2>Custom components</TextH2>\r\n\r\n          <TextParagraph>You can add all of your own content and structure for these screens, making use of the customised text components from components/StyledText.</TextParagraph>\r\n\r\n          <TextH3>Custom text components:</TextH3>\r\n\r\n         \r\n\r\n\r\n\r\n\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAE/B,SAASC,YAAY,QAAQ,gCAAgC;AAG7D,OAAOC,QAAQ;AAGf,SAASC,aAAa,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,YAAY;AAC5D,OAAOC,MAAM;AACb,OAAOC,OAAO;AACd,SAASC,QAAQ;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAKlD,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAE;EAGxC,IAAAC,eAAA,GAA8CrB,KAAK,CAACsB,QAAQ,CAAChB,QAAQ,CAACiB,gBAAgB,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAJ,eAAA;IAAhFE,gBAAgB,GAAAC,gBAAA;IAAEE,mBAAmB,GAAAF,gBAAA;EAE5C,SAASG,cAAcA,CAACJ,gBAAgB,EAAE;IACxCjB,QAAQ,CAACiB,gBAAgB,IAAIA,gBAAgB;IAC7CG,mBAAmB,CAACpB,QAAQ,CAACiB,gBAAgB,CAAC;EAChD;EAEA,OACEP,IAAA,CAACX,YAAY;IAACuB,KAAK,EAAEhB,MAAM,CAACiB,YAAa;IAAAC,QAAA,EACvCZ,KAAA,CAAChB,UAAU;MAAC0B,KAAK,EAAEhB,MAAM,CAACmB,SAAU;MAACC,qBAAqB,EAAEpB,MAAM,CAACqB,gBAAiB;MAAAH,QAAA,GAElFZ,KAAA,CAACjB,IAAI;QAAC2B,KAAK,EAAEhB,MAAM,CAACsB,mBAAoB;QAAAJ,QAAA,GACtCd,IAAA,CAACF,QAAQ;UACPqB,IAAI,EAAC,WAAW;UAChBC,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,QAAQ;UACbC,OAAO,EAAE,SAAAA,QAAA,EAAI;YAACX,cAAc,CAAC,CAAC,GAAG,CAAC;UAAA,CAAE;UACpCY,WAAW,EAAE3B,MAAM,CAAC4B;QAAW,CAChC,CAAC,EAEFxB,IAAA,CAACF,QAAQ;UACPqB,IAAI,EAAC,UAAU;UACfC,IAAI,EAAC,SAAS;UACdC,IAAI,EAAC,QAAQ;UACbC,OAAO,EAAE,SAAAA,QAAA,EAAI;YAACX,cAAc,CAAC,CAAC,GAAG,CAAC;UAAA,CAAE;UACpCY,WAAW,EAAE3B,MAAM,CAAC4B;QAAW,CAChC,CAAC;MAAA,CACE,CAAC,EAEPtB,KAAA,CAACjB,IAAI;QAAA6B,QAAA,GAELd,IAAA,CAACR,MAAM;UAACoB,KAAK,EAAE;YAAEa,SAAS,EAAE,CAAC;YAAEC,UAAU,EAAE;UAAG,CAAE;UAAAZ,QAAA,EAAC;QAAW,CAAQ,CAAC,EAKnEd,IAAA,CAACN,MAAM;UAAAoB,QAAA,EAAC;QAAkB,CAAQ,CAAC,EAInCd,IAAA,CAACP,MAAM;UAAAqB,QAAA,EAAC;QAAc,CAAQ,CAAC,EAE/Bd,IAAA,CAACT,aAAa;UAAAuB,QAAA,EAAC;QAA6F,CAAe,CAAC,EAE5Hd,IAAA,CAACP,MAAM;UAAAqB,QAAA,EAAC;QAAiB,CAAQ,CAAC,EAElCd,IAAA,CAACT,aAAa;UAAAuB,QAAA,EAAC;QAA6I,CAAe,CAAC,EAE5Kd,IAAA,CAACN,MAAM;UAAAoB,QAAA,EAAC;QAAuB,CAAQ,CAAC;MAAA,CAOpC,CAAC;IAAA,CACG;EAAC,CACD,CAAC;AAEnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}