{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Settings from \"../constants/Settings\";\nimport { TextParagraph, TextH1, TextH2, TextH3, TextListItem } from \"../components/StyledText\";\nimport Styles from \"../styles/MainStyle\";\nimport Colours from \"../constants/Colours\";\nimport { MyButton } from \"../components/MyButton\";\nimport HeaderBar from \"../components/HeaderBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function HelpScreen(props) {\n  var _React$useState = React.useState(Settings.fontSizeModifier),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    fontSizeModifier = _React$useState2[0],\n    setFontSizeModifier = _React$useState2[1];\n  function changeFontSize(fontSizeModifier) {\n    Settings.fontSizeModifier += fontSizeModifier;\n    setFontSizeModifier(Settings.fontSizeModifier);\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(Stack.Navigator, {\n      initialRouteName: \"ViewPeople\",\n      screenOptions: {},\n      children: _jsx(Stack.Screen, {\n        name: \"ViewPeople\",\n        component: ViewPeopleScreen,\n        options: {\n          header: function header() {\n            return _jsx(HeaderBar, {});\n          }\n        }\n      })\n    }), _jsx(SafeAreaView, {\n      style: Styles.safeAreaView,\n      children: _jsx(ScrollView, {\n        style: Styles.container,\n        contentContainerStyle: Styles.contentContainer,\n        children: _jsxs(View, {\n          children: [_jsx(TextH1, {\n            style: {\n              marginTop: 0\n            },\n            children: \"Help topics\"\n          }), _jsx(TextH3, {\n            children: \"Font size\"\n          }), _jsxs(View, {\n            style: Styles.helpButtonContainer,\n            children: [_jsx(MyButton, {\n              text: \"- smaller\",\n              type: \"default\",\n              size: \"Medium\",\n              onPress: function onPress() {\n                changeFontSize(-0.1);\n              },\n              buttonStyle: Styles.helpButton\n            }), _jsx(MyButton, {\n              text: \"+ Bigger\",\n              type: \"default\",\n              size: \"Medium\",\n              onPress: function onPress() {\n                changeFontSize(+0.1);\n              },\n              buttonStyle: Styles.helpButton\n            })]\n          }), _jsx(TextH2, {\n            children: \"Sample content\"\n          }), _jsx(TextParagraph, {\n            children: \"Here is some sample content for a help topic (or just any set of static text for the screen).\"\n          }), _jsx(TextH2, {\n            children: \"Custom components\"\n          }), _jsx(TextParagraph, {\n            children: \"You can add all of your own content and structure for these screens, making use of the customised text components from components/StyledText.\"\n          }), _jsx(TextH3, {\n            children: \"Custom text components:\"\n          }), _jsx(TextListItem, {\n            children: \"MonoText - Monospaced font (Space Mono)\"\n          }), _jsx(TextListItem, {\n            children: \"TextH1 - heading 1\"\n          }), _jsx(TextListItem, {\n            children: \"TextH2 - heading 2\"\n          }), _jsx(TextListItem, {\n            children: \"TextH3 - heading 3\"\n          }), _jsx(TextListItem, {\n            children: \"TextParagraph - paragraph\"\n          }), _jsx(TextListItem, {\n            children: \"TextListItem - bullet list item\"\n          }), _jsx(TextListItem, {\n            children: \"TextLabel - form label (inline with input)\"\n          }), _jsx(TextH2, {\n            children: \"Wanna go home?\"\n          }), _jsx(Pressable, {\n            onPress: function onPress() {\n              return props.navigation.replace('Root');\n            },\n            children: _jsx(TextParagraph, {\n              style: {\n                marginVertical: 10,\n                color: Colours.tabLabelSelected\n              },\n              children: \"Click here to go home...\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","View","ScrollView","Pressable","Text","SafeAreaView","createNativeStackNavigator","Settings","TextParagraph","TextH1","TextH2","TextH3","TextListItem","Styles","Colours","MyButton","HeaderBar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","HelpScreen","props","_React$useState","useState","fontSizeModifier","_React$useState2","_slicedToArray","setFontSizeModifier","changeFontSize","children","Navigator","initialRouteName","screenOptions","Screen","name","component","ViewPeopleScreen","options","header","style","safeAreaView","container","contentContainerStyle","contentContainer","marginTop","helpButtonContainer","text","type","size","onPress","buttonStyle","helpButton","navigation","replace","marginVertical","color","tabLabelSelected"],"sources":["C:/Users/Filipe/Desktop/React Native App/Mobile App/Practice-Mobile-App/screens/HelpScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { View, ScrollView, Pressable, Text } from 'react-native';\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n// Import helper code\r\nimport Settings from '../constants/Settings';\r\n\r\n// Import styling and components\r\nimport { TextParagraph, TextH1, TextH2, TextH3, TextListItem } from \"../components/StyledText\";\r\nimport Styles from \"../styles/MainStyle\";\r\nimport Colours from '../constants/Colours';\r\nimport { MyButton } from '../components/MyButton';\r\nimport HeaderBar from '../components/HeaderBar';\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\nexport default function HelpScreen(props) {\r\n\r\n\r\n  const [fontSizeModifier, setFontSizeModifier]=React.useState(Settings.fontSizeModifier);\r\n\r\n  function changeFontSize(fontSizeModifier) {\r\n    Settings.fontSizeModifier += fontSizeModifier;\r\n    setFontSizeModifier(Settings.fontSizeModifier);\r\n  }\r\n\r\n  return (\r\n    <><Stack.Navigator\r\n      initialRouteName=\"ViewPeople\"\r\n      screenOptions={{}}>\r\n\r\n\r\n      <Stack.Screen\r\n        name=\"ViewPeople\"\r\n        component={ViewPeopleScreen}\r\n\r\n        options={{\r\n          header: () => <HeaderBar />, // using a custom component to change the styling to better reflect the figma design\r\n        }} />\r\n\r\n\r\n\r\n    </Stack.Navigator><SafeAreaView style={Styles.safeAreaView}>\r\n        <ScrollView style={Styles.container} contentContainerStyle={Styles.contentContainer}>\r\n\r\n          <View>\r\n            <TextH1 style={{ marginTop: 0 }}>Help topics</TextH1>\r\n\r\n\r\n\r\n\r\n            <TextH3>Font size</TextH3>\r\n\r\n            <View style={Styles.helpButtonContainer}>\r\n              <MyButton\r\n                text=\"- smaller\"\r\n                type=\"default\"\r\n                size=\"Medium\"\r\n                onPress={() => { changeFontSize(-0.1); } }\r\n                buttonStyle={Styles.helpButton} />\r\n              <MyButton\r\n                text=\"+ Bigger\"\r\n                type=\"default\"\r\n                size=\"Medium\"\r\n                onPress={() => { changeFontSize(+0.1); } }\r\n                buttonStyle={Styles.helpButton} />\r\n            </View>\r\n\r\n            <TextH2>Sample content</TextH2>\r\n\r\n            <TextParagraph>Here is some sample content for a help topic (or just any set of static text for the screen).</TextParagraph>\r\n\r\n            <TextH2>Custom components</TextH2>\r\n\r\n            <TextParagraph>You can add all of your own content and structure for these screens, making use of the customised text components from components/StyledText.</TextParagraph>\r\n\r\n            <TextH3>Custom text components:</TextH3>\r\n\r\n            <TextListItem>MonoText - Monospaced font (Space Mono)</TextListItem>\r\n            <TextListItem>TextH1 - heading 1</TextListItem>\r\n            <TextListItem>TextH2 - heading 2</TextListItem>\r\n            <TextListItem>TextH3 - heading 3</TextListItem>\r\n            <TextListItem>TextParagraph - paragraph</TextListItem>\r\n            <TextListItem>TextListItem - bullet list item</TextListItem>\r\n            <TextListItem>TextLabel - form label (inline with input)</TextListItem>\r\n\r\n            <TextH2>Wanna go home?</TextH2>\r\n\r\n            <Pressable onPress={() => props.navigation.replace('Root')}>\r\n              <TextParagraph style={{ marginVertical: 10, color: Colours.tabLabelSelected }}>Click here to go home...</TextParagraph>\r\n            </Pressable>\r\n\r\n          </View>\r\n        </ScrollView>\r\n      </SafeAreaView></>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}