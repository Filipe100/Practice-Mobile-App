{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport ViewPeopleScreen from \"../screens/ViewPeopleScreen\";\nimport Styles from \"../styles/MainStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar _React$useState = React.useState(true),\n  _React$useState2 = _slicedToArray(_React$useState, 2),\n  isLogoColor = _React$useState2[0],\n  setIslogoColor = _React$useState2[1];\nfunction toggleLogo() {\n  setIslogoColor(!isLogoColor);\n}\nexport default function PeopleNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"ViewPeople\",\n    screenOptions: {\n      headerShown: true,\n      headerBackTitle: \"Back\",\n      headerStyle: Styles.headerBar,\n      headerTitleStyle: Styles.headerBarTitle\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"ViewPeople\",\n      component: ViewPeopleScreen,\n      options: {\n        title: 'View All Staff'\n      }\n    }), _jsx(Image, {\n      source: imageIndex[isLogoColor ? 'logo' : 'mono'],\n      style: Styles.homeLogo\n    })]\n  });\n}","map":{"version":3,"names":["createNativeStackNavigator","React","ViewPeopleScreen","Styles","jsx","_jsx","jsxs","_jsxs","Stack","_React$useState","useState","_React$useState2","_slicedToArray","isLogoColor","setIslogoColor","toggleLogo","PeopleNavigator","Navigator","initialRouteName","screenOptions","headerShown","headerBackTitle","headerStyle","headerBar","headerTitleStyle","headerBarTitle","children","Screen","name","component","options","title","Image","source","imageIndex","style","homeLogo"],"sources":["C:/Users/Filipe/Desktop/React Native App/Mobile App/Practice-Mobile-App/navigation/PeopleNavigator.js"],"sourcesContent":["//import { createStackNavigator } from '@react-navigation/stack';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\n\r\n// Import navigation and screens\r\nimport ViewPeopleScreen from '../screens/ViewPeopleScreen';\r\n\r\n// Import styling and components\r\nimport Styles from \"../styles/MainStyle\";\r\n\r\n//const Stack = createStackNavigator();\r\nconst Stack = createNativeStackNavigator();\r\nconst [isLogoColor, setIslogoColor] = React.useState(true);\r\nfunction toggleLogo() {\r\n    setIslogoColor(!isLogoColor);\r\n    //console.log('345345');\r\n  }\r\nexport default function PeopleNavigator() {\r\n  return (\r\n    <Stack.Navigator \r\n      initialRouteName=\"ViewPeople\"\r\n      screenOptions={{\r\n        headerShown: true,\r\n        headerBackTitle: \"Back\",\r\n        headerStyle: Styles.headerBar,\r\n        headerTitleStyle: Styles.headerBarTitle,\r\n      }}>\r\n      <Stack.Screen\r\n        name=\"ViewPeople\"\r\n        component={ViewPeopleScreen}\r\n        options={{ title: 'View All Staff' }} />\r\n          \r\n\r\n\r\n\r\n\r\n\r\n        <Image source={imageIndex[isLogoColor ? 'logo' : 'mono']} style={Styles.homeLogo}/>\r\n    </Stack.Navigator>\r\n  );\r\n}"],"mappings":";AACA,SAASA,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAO,KAAKC,KAAK,MAAM,OAAO;AAG9B,OAAOC,gBAAgB;AAGvB,OAAOC,MAAM;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGzC,IAAMC,KAAK,GAAGR,0BAA0B,CAAC,CAAC;AAC1C,IAAAS,eAAA,GAAsCR,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC;EAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;EAAnDI,WAAW,GAAAF,gBAAA;EAAEG,cAAc,GAAAH,gBAAA;AAClC,SAASI,UAAUA,CAAA,EAAG;EAClBD,cAAc,CAAC,CAACD,WAAW,CAAC;AAE9B;AACF,eAAe,SAASG,eAAeA,CAAA,EAAG;EACxC,OACET,KAAA,CAACC,KAAK,CAACS,SAAS;IACdC,gBAAgB,EAAC,YAAY;IAC7BC,aAAa,EAAE;MACbC,WAAW,EAAE,IAAI;MACjBC,eAAe,EAAE,MAAM;MACvBC,WAAW,EAAEnB,MAAM,CAACoB,SAAS;MAC7BC,gBAAgB,EAAErB,MAAM,CAACsB;IAC3B,CAAE;IAAAC,QAAA,GACFrB,IAAA,CAACG,KAAK,CAACmB,MAAM;MACXC,IAAI,EAAC,YAAY;MACjBC,SAAS,EAAE3B,gBAAiB;MAC5B4B,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAiB;IAAE,CAAE,CAAC,EAOxC1B,IAAA,CAAC2B,KAAK;MAACC,MAAM,EAAEC,UAAU,CAACrB,WAAW,GAAG,MAAM,GAAG,MAAM,CAAE;MAACsB,KAAK,EAAEhC,MAAM,CAACiC;IAAS,CAAC,CAAC;EAAA,CACtE,CAAC;AAEtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}