{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nvar checkDimensions = function checkDimensions(dimensions) {\n  var window = Dimensions.get(\"window\");\n  var screen = Dimensions.get(\"screen\");\n  return dimensions.some(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      width = _ref2[0],\n      height = _ref2[1];\n    return window.height === height && window.width === width || window.width === height && window.height === width || screen.height === height && screen.width === width || screen.width === height && screen.height === width;\n  });\n};\nvar checkStatusBarHeight = function checkStatusBarHeight(height) {\n  var resolutions = {\n    44: [[375, 812], [414, 896]],\n    47: [[390, 844], [428, 926]],\n    48: [[414, 896]],\n    50: [[360, 780], [375, 812]],\n    59: [[393, 852], [430, 932]]\n  };\n  return Object.keys(resolutions).some(function (key) {\n    return parseInt(key) === height && checkDimensions(resolutions[key]);\n  });\n};\nvar getIphoneStatusBarHeight = function getIphoneStatusBarHeight() {\n  if (isIphoneX()) {\n    if (checkStatusBarHeight(47)) {\n      return 47;\n    }\n    if (checkStatusBarHeight(48)) {\n      return 48;\n    }\n    if (checkStatusBarHeight(50)) {\n      return 50;\n    }\n    if (checkStatusBarHeight(59)) {\n      return 59;\n    }\n    return 44;\n  }\n  return 20;\n};\nexport function isIphoneX() {\n  return Platform.OS === \"ios\" && !Platform.isPad && !Platform.isTV && checkDimensions([[780, 360], [812, 375], [844, 390], [896, 414], [926, 428], [852, 393], [932, 430]]);\n}\nexport function isDynamicIsland() {\n  return Platform.OS === \"ios\" && !Platform.isPad && !Platform.isTV && checkStatusBarHeight(59);\n}\nexport function ifIphoneX(iphoneXStyle, regularStyle) {\n  return isIphoneX() ? iphoneXStyle : regularStyle;\n}\nexport function getStatusBarHeight() {\n  return Platform.select({\n    ios: getIphoneStatusBarHeight(),\n    android: StatusBar.currentHeight,\n    default: 0\n  });\n}\nexport function getBottomSpace() {\n  return isIphoneX() ? 34 : 0;\n}","map":{"version":3,"names":["checkDimensions","dimensions","window","Dimensions","get","screen","some","_ref","_ref2","_slicedToArray","width","height","checkStatusBarHeight","resolutions","Object","keys","key","parseInt","getIphoneStatusBarHeight","isIphoneX","Platform","OS","isPad","isTV","isDynamicIsland","ifIphoneX","iphoneXStyle","regularStyle","getStatusBarHeight","select","ios","android","StatusBar","currentHeight","default","getBottomSpace"],"sources":["C:/Users/Filipe/Desktop/React Native App/Mobile App/Practice-Mobile-App/node_modules/react-native-iphone-screen-helper/index.js"],"sourcesContent":["import { Dimensions, Platform, StatusBar } from \"react-native\"\n\nconst checkDimensions = (dimensions) => {\n    const window = Dimensions.get(\"window\")\n    const screen = Dimensions.get(\"screen\")\n\n    return dimensions.some(([width, height]) => {\n        return (window.height === height && window.width === width) ||\n            (window.width === height && window.height === width) ||\n            (screen.height === height && screen.width === width) ||\n            (screen.width === height && screen.height === width)\n    })\n}\nconst checkStatusBarHeight = (height) => {\n    const resolutions = {\n        44: [\n            [375, 812],\n            [414, 896]\n        ],\n        47: [\n            [390, 844],\n            [428, 926]\n        ],\n        48: [\n            [414, 896]\n        ],\n        50: [\n            [360, 780],\n            [375, 812]\n        ],\n        59: [\n            [393, 852],\n            [430, 932]\n        ]\n    }\n\n    return Object.keys(resolutions).some(key => {\n        return parseInt(key) === height && checkDimensions(resolutions[key])\n    })\n}\n\nconst getIphoneStatusBarHeight = () => {\n    if (isIphoneX()) {\n        if (checkStatusBarHeight(47)) {\n            return 47\n        }\n        if (checkStatusBarHeight(48)) {\n            return 48\n        }\n        if (checkStatusBarHeight(50)) {\n            return 50\n        }\n        if (checkStatusBarHeight(59)) {\n            return 59\n        }\n        return 44\n    }\n    return 20\n}\n\nexport function isIphoneX() {\n    return Platform.OS === \"ios\" && !Platform.isPad && !Platform.isTV && checkDimensions([\n        [780, 360],\n        [812, 375],\n        [844, 390],\n        [896, 414],\n        [926, 428],\n        [852, 393],\n        [932, 430]\n    ])\n}\n\nexport function isDynamicIsland() {\n    return Platform.OS === \"ios\" && !Platform.isPad && !Platform.isTV && checkStatusBarHeight(59)\n}\n\nexport function ifIphoneX(iphoneXStyle, regularStyle) {\n    return isIphoneX() ? iphoneXStyle : regularStyle\n}\n\nexport function getStatusBarHeight() {\n    return Platform.select({\n        ios: getIphoneStatusBarHeight(),\n        android: StatusBar.currentHeight,\n        default: 0,\n    })\n}\n\nexport function getBottomSpace() {\n    return isIphoneX() ? 34 : 0\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}