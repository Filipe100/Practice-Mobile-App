{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Settings from \"../constants/Settings\";\nimport { RoiDeletePerson, RoiGetPerson } from \"../utils/RoiApi\";\nimport { PopupOk, PopupOkCancel } from \"../utils/Popup\";\nimport { TextParagraph, Text, TextH1, TextH2, TextLabel } from \"../components/StyledText\";\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from \"../components/MyButton\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ViewPersonScreen(props) {\n  var personTemplate = {\n    id: 0,\n    name: '',\n    phone: '',\n    departmentId: null,\n    street: '',\n    city: '',\n    state: '',\n    zip: '',\n    country: '',\n    department: null\n  };\n  var _React$useState = React.useState(personTemplate),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    person = _React$useState2[0],\n    setPerson = _React$useState2[1];\n  React.useEffect(refreshPerson, [person]);\n  function refreshPerson() {\n    var id = props.route.params.id;\n    RoiGetPerson(id).then(function (data) {\n      if (data) setPerson(data);\n    }).catch(function (error) {\n      PopupOk('API Error', 'Could not get person from the server');\n      props.navigation.navigate('ViewPeople');\n    });\n  }\n  function showEditPerson() {\n    props.navigation.navigate(\"EditPerson\", {\n      id: person.id\n    });\n  }\n  function deletePerson() {\n    PopupOkCancel('Delete person?', `Are you sure you want to delete ${person.name}`, function () {\n      RoiDeletePerson(person.id).then(function (data) {\n        PopupOk('Person deleted', `${person.name} has been  deleted`);\n        props.navigation.replace(\"Root\", {\n          screen: \"People\"\n        });\n      }).catch(function (error) {\n        PopupOk('API Error', 'Could not delete person');\n      });\n    }, function () {\n      console.log('Cancel - no delete for you!');\n    });\n  }\n  return _jsx(SafeAreaView, {\n    style: Styles.safeAreaView,\n    children: _jsxs(ScrollView, {\n      style: Styles.container,\n      contentContainerStyle: Styles.contentContainer,\n      children: [_jsxs(TextH1, {\n        style: {\n          marginTop: 0\n        },\n        children: [\"Person: \", person.name]\n      }), _jsxs(View, {\n        style: Styles.form,\n        children: [_jsxs(View, {\n          style: Styles.fieldSet,\n          children: [_jsx(TextParagraph, {\n            style: Styles.legend,\n            children: \"Details\"\n          }), _jsxs(View, {\n            style: Styles.formRow,\n            children: [_jsx(TextLabel, {\n              children: \"Name:\"\n            }), _jsx(TextParagraph, {\n              children: person.name ? person.name : '---'\n            })]\n          }), _jsxs(View, {\n            style: Styles.formRow,\n            children: [_jsx(TextLabel, {\n              children: \"Phone:\"\n            }), _jsx(TextParagraph, {\n              children: person.phone ? person.phone : '---'\n            })]\n          }), _jsxs(View, {\n            style: Styles.formRow,\n            children: [_jsx(TextLabel, {\n              children: \"Department:\"\n            }), _jsx(TextParagraph, {\n              children: person.department ? person.department.name : '---'\n            })]\n          })]\n        }), _jsxs(View, {\n          style: Styles.fieldSet,\n          children: [_jsx(TextParagraph, {\n            style: Styles.legend,\n            children: \"Address\"\n          }), _jsxs(View, {\n            style: Styles.formRow,\n            children: [_jsx(TextLabel, {\n              children: \"Street:\"\n            }), _jsx(TextParagraph, {\n              children: person.street\n            })]\n          }), _jsxs(View, {\n            style: Styles.formRow,\n            children: [_jsx(TextLabel, {\n              children: \"City:\"\n            }), _jsx(TextParagraph, {\n              children: person.city\n            })]\n          }), _jsxs(View, {\n            style: Styles.formRow,\n            children: [_jsx(TextLabel, {\n              children: \"State:\"\n            }), _jsx(TextParagraph, {\n              children: person.state\n            })]\n          }), _jsxs(View, {\n            style: Styles.formRow,\n            children: [_jsx(TextLabel, {\n              children: \"Zip:\"\n            }), _jsx(TextParagraph, {\n              children: person.zip\n            })]\n          }), _jsxs(View, {\n            style: Styles.formRow,\n            children: [_jsx(TextLabel, {\n              children: \"Country:\"\n            }), _jsx(TextParagraph, {\n              children: person.country\n            })]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: [Styles.personButtonContainer, {\n          borderBottomWidth: 0\n        }],\n        children: [_jsx(MyButton, {\n          text: \"Edit\",\n          type: \"major\",\n          size: \"medium\",\n          onPress: showEditPerson\n        }), _jsx(MyButton, {\n          text: \"Delete\",\n          type: \"default\",\n          size: \"medium\",\n          onPress: deletePerson\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","View","ScrollView","SafeAreaView","Settings","RoiDeletePerson","RoiGetPerson","PopupOk","PopupOkCancel","TextParagraph","Text","TextH1","TextH2","TextLabel","Styles","MyButton","jsxs","_jsxs","jsx","_jsx","ViewPersonScreen","props","personTemplate","id","name","phone","departmentId","street","city","state","zip","country","department","_React$useState","useState","_React$useState2","_slicedToArray","person","setPerson","useEffect","refreshPerson","route","params","then","data","catch","error","navigation","navigate","showEditPerson","deletePerson","replace","screen","console","log","style","safeAreaView","children","container","contentContainerStyle","contentContainer","marginTop","form","fieldSet","legend","formRow","personButtonContainer","borderBottomWidth","text","type","size","onPress"],"sources":["C:/Users/Filipe/Desktop/React Native App/Mobile App/Practice-Mobile-App/screens/ViewPersonScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { View, ScrollView } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\n// Import helper code\r\nimport Settings from '../constants/Settings';\r\nimport { RoiDeletePerson, RoiGetPerson } from '../utils/RoiApi';\r\nimport { PopupOk, PopupOkCancel } from '../utils/Popup';\r\n\r\n// Import styling and components\r\nimport { TextParagraph, Text, TextH1, TextH2, TextLabel } from '../components/StyledText';\r\nimport Styles from '../styles/MainStyle';\r\nimport { MyButton } from '../components/MyButton';\r\n\r\n\r\nexport default function ViewPersonScreen(props) {\r\n  // Set up a default Person object\r\n  const personTemplate = {\r\n    id: 0,\r\n    name: '',\r\n    phone: '',\r\n    departmentId: null,\r\n    street: '',\r\n    city: '',\r\n    state: '',\r\n    zip: '',\r\n    country: '',\r\n    department: null,\r\n  };\r\n\r\n  // State - data for this component\r\n\r\n  // Store a person in state\r\n  const [person, setPerson] = React.useState(personTemplate);\r\n\r\n  // Set \"effect\" to retrieve and store data - only run on mount/unmount (loaded/unloaded)\r\n  // \"effectful\" code is something that triggers a UI re-render\r\nReact.useEffect(refreshPerson, [person]);\r\n\r\n  // Refresh the person data - call the API\r\n  function refreshPerson() {\r\n    // Get person ID passed to this screen (via props)\r\n    const id = props.route.params.id;\r\n\r\n    // Get data from the API\r\n    RoiGetPerson(id)\r\n      // Success\r\n      .then((data) => {\r\n        // Store results in state variable (if data returned)\r\n        if (data) setPerson(data);\r\n      })\r\n      // Error\r\n      .catch((error) => {\r\n        // Display error\r\n        PopupOk('API Error', 'Could not get person from the server');\r\n        // OPTIONAL: navigate back to ViewPeople screen\r\n        props.navigation.navigate('ViewPeople');\r\n      });\r\n  }\r\n\r\n  function showEditPerson() {\r\n    props.navigation.navigate(\"EditPerson\", {id: person.id});\r\n  }\r\n\r\n  /**\r\n   * Delete a person from the database\r\n   */\r\n  function deletePerson() {\r\n\r\n    // Check if person should be deleted (confirm with user)\r\n    PopupOkCancel(\r\n\r\n      // Title and message\r\n      'Delete person?',\r\n      `Are you sure you want to delete ${person.name}`,\r\n\r\n      // 0K - delete the person\r\n      () => {\r\n\r\n        // Delete the person using the API\r\n        RoiDeletePerson(person.id)\r\n          .then((data) => {\r\n            // Show confirmation that the person has been deleted\r\n            PopupOk('Person deleted', `${person.name} has been  deleted`);\r\n\r\n            // Go back to the person list (ViewPeople)\r\n            // props.navigation.navigate(\"ViewPeople\");\r\n            props.navigation.replace(\"Root\", {screen: \"People\"});\r\n          })\r\n          .catch((error) => {\r\n            // Display error\r\n            PopupOk('API Error', 'Could not delete person');\r\n          });\r\n        // console.log('Ok.. deleting person');\r\n      },\r\n      // Cancel do nothing\r\n      () => {\r\n        console.log('Cancel - no delete for you!');\r\n      }\r\n    );\r\n  }\r\n\r\n  // Main output of the screen component\r\n// Main output of the screen component\r\nreturn (\r\n  <SafeAreaView style={Styles.safeAreaView}>\r\n    <ScrollView style={Styles.container} contentContainerStyle={Styles.contentContainer}>\r\n      <TextH1 style={{ marginTop: 0 }}>Person: {person.name}</TextH1>\r\n\r\n      <View style={Styles.form}>\r\n        <View style={Styles.fieldSet}>\r\n          <TextParagraph style={Styles.legend}>Details</TextParagraph>\r\n          <View style={Styles.formRow}>\r\n            <TextLabel>Name:</TextLabel>\r\n            <TextParagraph>{person.name ? person.name : '---'}</TextParagraph>\r\n\r\n          </View>\r\n          <View style={Styles.formRow}>\r\n            <TextLabel>Phone:</TextLabel>\r\n            <TextParagraph>{person.phone ? person.phone : '---'}</TextParagraph>\r\n\r\n          </View>\r\n\r\n\r\n          <View style={Styles.formRow}>\r\n            <TextLabel>Department:</TextLabel>\r\n            <TextParagraph>{person.department ? person.department.name : '---'}</TextParagraph>\r\n            {/* <TextParagraph>{person.department?.name ?? '<NONE>'}</TextParagraph> */}\r\n          </View>\r\n        </View>\r\n\r\n        <View style={Styles.fieldSet}>\r\n          <TextParagraph style={Styles.legend}>Address</TextParagraph>\r\n\r\n          <View style={Styles.formRow}>\r\n            <TextLabel>Street:</TextLabel>\r\n            <TextParagraph>{person.street}</TextParagraph>\r\n          </View>\r\n          <View style={Styles.formRow}>\r\n            <TextLabel>City:</TextLabel>\r\n            <TextParagraph>{person.city}</TextParagraph>\r\n          </View>\r\n          <View style={Styles.formRow}>\r\n            <TextLabel>State:</TextLabel>\r\n            <TextParagraph>{person.state}</TextParagraph>\r\n          </View>\r\n          <View style={Styles.formRow}>\r\n            <TextLabel>Zip:</TextLabel>\r\n            <TextParagraph>{person.zip}</TextParagraph>\r\n          </View>\r\n          <View style={Styles.formRow}>\r\n            <TextLabel>Country:</TextLabel>\r\n            <TextParagraph>{person.country}</TextParagraph>\r\n          </View>\r\n \r\n        </View>\r\n      </View>\r\n\r\n      <View style={[Styles.personButtonContainer, { borderBottomWidth: 0 }]}>\r\n        <MyButton\r\n          text=\"Edit\"\r\n          type=\"major\" // default*|major|minor\r\n          size=\"medium\" // small|medium*|large\r\n          onPress={showEditPerson}\r\n        />\r\n        <MyButton\r\n          text=\"Delete\"\r\n          type=\"default\" // default*|major|minor\r\n          size=\"medium\" // small|medium*|large\r\n          onPress={deletePerson}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  </SafeAreaView>\r\n);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}