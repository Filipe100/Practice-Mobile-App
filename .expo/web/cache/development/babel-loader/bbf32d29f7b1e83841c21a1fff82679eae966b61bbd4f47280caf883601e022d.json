{"ast":null,"code":"import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport BottomTabNavigator from \"./BottomTabNavigator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Screen not found'\n      }\n    })]\n  });\n}","map":{"version":3,"names":["createNativeStackNavigator","React","NotFoundScreen","BottomTabNavigator","jsx","_jsx","jsxs","_jsxs","RootNavigator","Stack","Navigator","screenOptions","headerShown","children","Screen","name","component","options","title"],"sources":["C:/project/Practice-Mobile-Apps/navigation/RootNavigator.js"],"sourcesContent":["//import { createStackNavigator } from '@react-navigation/stack';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\n\r\n// Import navigation and screens\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport BottomTabNavigator from './BottomTabNavigator';\r\n\r\n// If you are not familiar with React Navigation, we recommend going through the\r\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\r\n\r\n// A root stack navigator is often used for displaying modals on top of all other content\r\n// Read more here: https://reactnavigation.org/docs/modal\r\n//const Stack = createStackNavigator();\r\n\r\n\r\nexport default function RootNavigator() {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Screen not found' }} />\r\n    </Stack.Navigator>\r\n  );\r\n}"],"mappings":"AACA,SAASA,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAO,KAAKC,KAAK,MAAM,OAAO;AAG9B,OAAOC,cAAc;AACrB,OAAOC,kBAAkB;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAUtD,eAAe,SAASC,aAAaA,CAAA,EAAG;EACtC,OACED,KAAA,CAACE,KAAK,CAACC,SAAS;IAACC,aAAa,EAAE;MAAEC,WAAW,EAAE;IAAM,CAAE;IAAAC,QAAA,GACrDR,IAAA,CAACI,KAAK,CAACK,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAEb;IAAmB,CAAE,CAAC,EAC3DE,IAAA,CAACI,KAAK,CAACK,MAAM;MAACC,IAAI,EAAC,UAAU;MAACC,SAAS,EAAEd,cAAe;MAACe,OAAO,EAAE;QAAEC,KAAK,EAAE;MAAmB;IAAE,CAAE,CAAC;EAAA,CACpF,CAAC;AAEtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}