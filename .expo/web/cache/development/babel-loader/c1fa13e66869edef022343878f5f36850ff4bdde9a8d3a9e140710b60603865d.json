{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar FlashMessageManager = function () {\n  function FlashMessageManager() {\n    _classCallCheck(this, FlashMessageManager);\n    this._preservedFlashMessages = [];\n    this._currentFlashMessage = null;\n    this._enabled = true;\n  }\n  _createClass(FlashMessageManager, [{\n    key: \"isEnabled\",\n    get: function get() {\n      return !!this._enabled;\n    }\n  }, {\n    key: \"setDisabled\",\n    value: function setDisabled() {\n      var disable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this._enabled = !disable;\n    }\n  }, {\n    key: \"hold\",\n    value: function hold(_tempInstance) {\n      if (\"_id\" in _tempInstance) {\n        var wasHeld = false;\n        if (this._preservedFlashMessages.length > 0) {\n          wasHeld = this._preservedFlashMessages[this._preservedFlashMessages.length - 1]._id === _tempInstance._id;\n        }\n        if (!wasHeld) {\n          this._preservedFlashMessages.push(this._currentFlashMessage);\n          this._currentFlashMessage = null;\n          this.register(_tempInstance);\n        }\n      }\n    }\n  }, {\n    key: \"unhold\",\n    value: function unhold() {\n      if (this._preservedFlashMessages.length > 0) {\n        if (!!this._currentFlashMessage) {\n          this._currentFlashMessage.hideMessage();\n          this._currentFlashMessage = null;\n        }\n        this.register(this._preservedFlashMessages.pop());\n      }\n    }\n  }, {\n    key: \"register\",\n    value: function register(_instance) {\n      if (!this._currentFlashMessage && \"_id\" in _instance) {\n        this._currentFlashMessage = _instance;\n      }\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(_instance) {\n      if (!!this._currentFlashMessage && this._currentFlashMessage._id === _instance._id) {\n        this._currentFlashMessage = null;\n      }\n    }\n  }, {\n    key: \"getCurrent\",\n    value: function getCurrent() {\n      return this._currentFlashMessage;\n    }\n  }]);\n  return FlashMessageManager;\n}();\nexport default new FlashMessageManager();","map":{"version":3,"names":["FlashMessageManager","_classCallCheck","_preservedFlashMessages","_currentFlashMessage","_enabled","_createClass","key","get","value","setDisabled","disable","arguments","length","undefined","hold","_tempInstance","wasHeld","_id","push","register","unhold","hideMessage","pop","_instance","unregister","getCurrent"],"sources":["C:/Users/Filipe/Desktop/React Native App/Mobile App/Practice-Mobile-App/node_modules/react-native-flash-message/src/FlashMessageManager.js"],"sourcesContent":["/**\n * Utility class to handle the \"default\" FlashMessage instance to global use\n */\nclass FlashMessageManager {\n  _preservedFlashMessages = [];\n  _currentFlashMessage = null;\n  _enabled = true;\n  get isEnabled() {\n    return !!this._enabled;\n  }\n  setDisabled(disable = true) {\n    this._enabled = !disable;\n  }\n  hold(_tempInstance) {\n    if (\"_id\" in _tempInstance) {\n      let wasHeld = false;\n      if (this._preservedFlashMessages.length > 0) {\n        wasHeld = this._preservedFlashMessages[this._preservedFlashMessages.length - 1]._id === _tempInstance._id;\n      }\n\n      if (!wasHeld) {\n        this._preservedFlashMessages.push(this._currentFlashMessage);\n        this._currentFlashMessage = null;\n\n        this.register(_tempInstance);\n      }\n    }\n  }\n  unhold() {\n    if (this._preservedFlashMessages.length > 0) {\n      // here the current instance is the one that's held momentarily...\n      if (!!this._currentFlashMessage) {\n        this._currentFlashMessage.hideMessage();\n        this._currentFlashMessage = null;\n      }\n\n      this.register(this._preservedFlashMessages.pop());\n    }\n  }\n  register(_instance) {\n    if (!this._currentFlashMessage && \"_id\" in _instance) {\n      this._currentFlashMessage = _instance;\n    }\n  }\n  unregister(_instance) {\n    if (!!this._currentFlashMessage && this._currentFlashMessage._id === _instance._id) {\n      this._currentFlashMessage = null;\n    }\n  }\n  getCurrent() {\n    return this._currentFlashMessage;\n  }\n}\n\nexport default new FlashMessageManager();\n"],"mappings":";;IAGMA,mBAAmB;EAAA,SAAAA,oBAAA;IAAAC,eAAA,OAAAD,mBAAA;IAAA,KACvBE,uBAAuB,GAAG,EAAE;IAAA,KAC5BC,oBAAoB,GAAG,IAAI;IAAA,KAC3BC,QAAQ,GAAG,IAAI;EAAA;EAAAC,YAAA,CAAAL,mBAAA;IAAAM,GAAA;IAAAC,GAAA,EACf,SAAAA,IAAA,EAAgB;MACd,OAAO,CAAC,CAAC,IAAI,CAACH,QAAQ;IACxB;EAAC;IAAAE,GAAA;IAAAE,KAAA,EACD,SAAAC,YAAA,EAA4B;MAAA,IAAhBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;MACxB,IAAI,CAACP,QAAQ,GAAG,CAACM,OAAO;IAC1B;EAAC;IAAAJ,GAAA;IAAAE,KAAA,EACD,SAAAM,KAAKC,aAAa,EAAE;MAClB,IAAI,KAAK,IAAIA,aAAa,EAAE;QAC1B,IAAIC,OAAO,GAAG,KAAK;QACnB,IAAI,IAAI,CAACd,uBAAuB,CAACU,MAAM,GAAG,CAAC,EAAE;UAC3CI,OAAO,GAAG,IAAI,CAACd,uBAAuB,CAAC,IAAI,CAACA,uBAAuB,CAACU,MAAM,GAAG,CAAC,CAAC,CAACK,GAAG,KAAKF,aAAa,CAACE,GAAG;QAC3G;QAEA,IAAI,CAACD,OAAO,EAAE;UACZ,IAAI,CAACd,uBAAuB,CAACgB,IAAI,CAAC,IAAI,CAACf,oBAAoB,CAAC;UAC5D,IAAI,CAACA,oBAAoB,GAAG,IAAI;UAEhC,IAAI,CAACgB,QAAQ,CAACJ,aAAa,CAAC;QAC9B;MACF;IACF;EAAC;IAAAT,GAAA;IAAAE,KAAA,EACD,SAAAY,OAAA,EAAS;MACP,IAAI,IAAI,CAAClB,uBAAuB,CAACU,MAAM,GAAG,CAAC,EAAE;QAE3C,IAAI,CAAC,CAAC,IAAI,CAACT,oBAAoB,EAAE;UAC/B,IAAI,CAACA,oBAAoB,CAACkB,WAAW,CAAC,CAAC;UACvC,IAAI,CAAClB,oBAAoB,GAAG,IAAI;QAClC;QAEA,IAAI,CAACgB,QAAQ,CAAC,IAAI,CAACjB,uBAAuB,CAACoB,GAAG,CAAC,CAAC,CAAC;MACnD;IACF;EAAC;IAAAhB,GAAA;IAAAE,KAAA,EACD,SAAAW,SAASI,SAAS,EAAE;MAClB,IAAI,CAAC,IAAI,CAACpB,oBAAoB,IAAI,KAAK,IAAIoB,SAAS,EAAE;QACpD,IAAI,CAACpB,oBAAoB,GAAGoB,SAAS;MACvC;IACF;EAAC;IAAAjB,GAAA;IAAAE,KAAA,EACD,SAAAgB,WAAWD,SAAS,EAAE;MACpB,IAAI,CAAC,CAAC,IAAI,CAACpB,oBAAoB,IAAI,IAAI,CAACA,oBAAoB,CAACc,GAAG,KAAKM,SAAS,CAACN,GAAG,EAAE;QAClF,IAAI,CAACd,oBAAoB,GAAG,IAAI;MAClC;IACF;EAAC;IAAAG,GAAA;IAAAE,KAAA,EACD,SAAAiB,WAAA,EAAa;MACX,OAAO,IAAI,CAACtB,oBAAoB;IAClC;EAAC;EAAA,OAAAH,mBAAA;AAAA;AAGH,eAAe,IAAIA,mBAAmB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}